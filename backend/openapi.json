{
  "openapi": "3.1.0",
  "info": {
    "title": "üé¨ Cine Gama API",
    "description": "Sistema de gerenciamento de cinema com filmes, sess√µes e venda de ingressos",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://cine-gama-backend.1ziw9aq991z6.us-south.codeengine.appdomain.cloud/",
      "description": "Servidor de produ√ß√£o do Cine Gama"
    }
  ],
  "paths": {
    "/filmes": {
      "get": {
        "summary": "Listar todos os filmes em cartaz",
        "description": "Retorna uma lista de todos os filmes dispon√≠veis no cinema com informa√ß√µes detalhadas como t√≠tulo, descri√ß√£o, g√™nero, dura√ß√£o, classifica√ß√£o et√°ria, diretor e ano de lan√ßamento.",
        "operationId": "listar_filmes_filmes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/FilmeOut" },
                  "title": "Response Listar Filmes Filmes Get"
                }
              }
            }
          }
        }
      }
    },
    "/sessoes": {
      "get": {
        "summary": "Listar todas as sess√µes dispon√≠veis",
        "description": "Retorna uma lista de todas as sess√µes de cinema dispon√≠veis, incluindo informa√ß√µes do filme, sala, hor√°rios, pre√ßo e disponibilidade de assentos.",
        "operationId": "listar_sessoes_sessoes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/SessaoOut" },
                  "title": "Response Listar Sessoes Sessoes Get"
                }
              }
            }
          }
        }
      }
    },
    "/comprar_ingresso": {
      "post": {
        "summary": "Comprar ingresso para uma sess√£o",
        "description": "Compra um ingresso para uma sess√£o espec√≠fica. Requer cliente_id, nome_cliente e sessao_id. Se a sess√£o tiver assentos dispon√≠veis e o cliente existir, um novo ingresso √© criado e o n√∫mero de assentos dispon√≠veis √© decrementado.",
        "operationId": "comprar_ingresso_comprar_ingresso_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/IngressoIn" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ingresso criado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/IngressoOut" }
              }
            }
          },
          "200": {
            "description": "Successful Response (compat)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/IngressoOut" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/ingressos/{cliente_id}": {
      "get": {
        "summary": "Listar todos os ingressos de um cliente",
        "description": "Retorna todos os ingressos de um cliente espec√≠fico por cliente_id. Inclui status do ingresso, data de compra e n√∫mero do assento.",
        "operationId": "listar_ingressos_cliente_ingressos__cliente_id__get",
        "parameters": [
          {
            "name": "cliente_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Cliente Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/IngressoOut" },
                  "title": "Response Listar Ingressos Cliente Ingressos  Cliente Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/cancelar_ingresso/{ingresso_id}": {
      "post": {
        "summary": "Cancelar um ingresso",
        "description": "Cancela um ingresso existente pelo ingresso_id. Se o ingresso estiver ativo, seu status √© alterado para 'cancelado' e o n√∫mero de assentos dispon√≠veis da sess√£o associada √© incrementado. Retorna os detalhes do ingresso atualizado.",
        "operationId": "cancelar_ingresso_cancelar_ingresso__ingresso_id__post",
        "parameters": [
          {
            "name": "ingresso_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Ingresso Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/IngressoOut" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/cadastrar_cliente": {
      "post": {
        "summary": "Cadastrar um novo cliente",
        "description": "Cadastra um novo cliente com nome, email √∫nico e telefone opcional. Retorna os dados do cliente criado.",
        "operationId": "cadastrar_cliente_cadastrar_cliente_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ClienteIn" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cliente criado",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ClienteOut" }
              }
            }
          },
          "200": {
            "description": "Successful Response (compat)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ClienteOut" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/buscar_cliente": {
      "get": {
        "summary": "Buscar cliente por email",
        "description": "Busca informa√ß√µes de um cliente fornecendo apenas o email. Sempre retorna status 200 com indicador de encontrado ou n√£o encontrado.",
        "operationId": "buscar_cliente_buscar_cliente_get",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "format": "email", "title": "Email" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ClienteBuscaOut" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/reset_clientes": {
      "delete": {
        "summary": "Deletar todos os clientes e seus ingressos",
        "description": "Deleta todos os Ingressos e Clientes do banco de dados, mantendo Filmes e Sess√µes intactos.",
        "operationId": "reset_clientes_reset_clientes_delete",
        "responses": {
          "204": { "description": "Reset conclu√≠do (sem conte√∫do)" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ClienteIn": {
        "type": "object",
        "title": "ClienteIn",
        "required": ["nome", "email"],
        "properties": {
          "nome": { "type": "string", "title": "Nome" },
          "email": { "type": "string", "format": "email", "title": "Email" },
          "telefone": {
            "title": "Telefone",
            "anyOf": [ { "type": "string" }, { "type": "null" } ]
          }
        }
      },
      "ClienteOut": {
        "type": "object",
        "title": "ClienteOut",
        "required": ["cliente_id", "nome", "email"],
        "properties": {
          "cliente_id": { "type": "integer", "title": "Cliente Id" },
          "nome": { "type": "string", "title": "Nome" },
          "email": { "type": "string", "format": "email", "title": "Email" },
          "telefone": {
            "title": "Telefone",
            "anyOf": [ { "type": "string" }, { "type": "null" } ]
          }
        }
      },
      "ClienteBuscaOut": {
        "type": "object",
        "title": "ClienteBuscaOut",
        "required": ["status", "message"],
        "properties": {
          "status": { 
            "type": "string", 
            "title": "Status",
            "description": "Indica se o cliente foi encontrado",
            "enum": ["found", "not_found"]
          },
          "cliente": {
            "title": "Cliente",
            "anyOf": [ { "$ref": "#/components/schemas/ClienteOut" }, { "type": "null" } ]
          },
          "message": { 
            "type": "string", 
            "title": "Message",
            "description": "Mensagem explicativa do resultado"
          }
        }
      },
      "FilmeOut": {
        "type": "object",
        "title": "FilmeOut",
        "required": ["filme_id", "titulo", "descricao", "genero", "duracao_minutos", "classificacao_etaria", "diretor", "ano_lancamento"],
        "properties": {
          "filme_id": { "type": "integer", "title": "Filme Id" },
          "titulo": { "type": "string", "title": "Titulo" },
          "descricao": { "type": "string", "title": "Descricao" },
          "genero": { "type": "string", "title": "Genero" },
          "duracao_minutos": { "type": "integer", "title": "Duracao Minutos" },
          "classificacao_etaria": { "type": "string", "title": "Classificacao Etaria" },
          "diretor": { "type": "string", "title": "Diretor" },
          "ano_lancamento": { "type": "integer", "title": "Ano Lancamento" }
        }
      },
      "HTTPValidationError": {
        "type": "object",
        "title": "HTTPValidationError",
        "properties": {
          "detail": {
            "type": "array",
            "title": "Detail",
            "items": { "$ref": "#/components/schemas/ValidationError" }
          }
        }
      },
      "IngressoIn": {
        "type": "object",
        "title": "IngressoIn",
        "required": ["cliente_id", "sessao_id"],
        "properties": {
          "cliente_id": { "type": "integer", "title": "Cliente Id" },
          "sessao_id": { "type": "integer", "title": "Sessao Id" }
        }
      },
      "IngressoOut": {
        "type": "object",
        "title": "IngressoOut",
        "required": ["ingresso_id", "cliente_id", "sessao_id", "status", "data_compra", "numero_assento"],
        "properties": {
          "ingresso_id": { "type": "integer", "title": "Ingresso Id" },
          "cliente_id": { "type": "integer", "title": "Cliente Id" },
          "sessao_id": { "type": "integer", "title": "Sessao Id" },
          "status": { "type": "string", "title": "Status" },
          "data_compra": { "type": "string", "format": "date-time", "title": "Data Compra" },
          "numero_assento": { "type": "string", "title": "Numero Assento" }
        }
      },
      "SessaoOut": {
        "type": "object",
        "title": "SessaoOut",
        "required": ["sessao_id", "filme_id", "sala", "horario_inicio", "horario_fim", "data_sessao", "preco_ingresso", "assentos_disponiveis", "assentos_total"],
        "properties": {
          "sessao_id": { "type": "integer", "title": "Sessao Id" },
          "filme_id": { "type": "integer", "title": "Filme Id" },
          "titulo_filme": {
            "title": "Titulo Filme",
            "anyOf": [ { "type": "string" }, { "type": "null" } ]
          },
          "sala": { "type": "string", "title": "Sala" },
          "horario_inicio": { "type": "string", "format": "time", "title": "Horario Inicio" },
          "horario_fim": { "type": "string", "format": "time", "title": "Horario Fim" },
          "data_sessao": { "type": "string", "format": "date", "title": "Data Sessao" },
          "preco_ingresso": { "type": "number", "title": "Preco Ingresso" },
          "assentos_disponiveis": { "type": "integer", "title": "Assentos Disponiveis" },
          "assentos_total": { "type": "integer", "title": "Assentos Total" }
        }
      },
      "ValidationError": {
        "type": "object",
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "properties": {
          "loc": {
            "type": "array",
            "title": "Location",
            "items": {
              "anyOf": [ { "type": "string" }, { "type": "integer" } ]
            }
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "title": "ErrorResponse",
        "required": ["error", "message"],
        "properties": {
          "error": { "type": "string", "description": "C√≥digo do erro" },
          "message": { "type": "string", "description": "Descri√ß√£o leg√≠vel do erro" }
        }
      }
    }
  }
}

